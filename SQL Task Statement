Login:
// Check if such user exist
"SELECT COUNT(1) FROM USER WHERE Email = %s;", [email]
// Get user info
"SELECT Username, Password, UserType, Approved FROM USER WHERE Email = %s;", [email]

SignUp:
// Insert new user's info
"INSERT INTO USER (email,username,password,usertype,title,approved,ucity,ustate) VALUES (%s,%s,%s,%s,%s,%r,%s,%s);", (email, username, password, usertype, title, approved, ucity, ustate)

Newdatapoint
"INSERT INTO DATAPOINT (PLocation_Name, DateRecorded, Data_Value, DType, Accepted) VALUES (%s, %s,%s,%s,%s);", (poiLocationName, timedate, datavalue, datatype, False)

Newlocation
"INSERT INTO POI (Location_Name, Zip_Code, PCity, PState) VALUES (%s, %s, %s, %s);", (locationname, zipcode, pcity, pstate)

Pending Data Point
// Retrive
"SELECT PLocation_Name, DType, Data_Value, DateRecorded FROM DATAPOINT WHERE NOT Accepted;"
// Accept
"UPDATE DATAPOINT SET Accepted = 1 WHERE PLocation_Name = %s AND DateRecorded = %s;", (entries[index][0], entries[index][3])
//Reject
"DELETE FROM DATAPOINT WHERE PLocation_Name = %s AND DateRecorded = %s;", (entries[index][0], entries[index][3])

Pending Account
// Retrive
"SELECT Username, Email, UCity, UState, Title FROM USER WHERE NOT Approved;"
// Accept
"UPDATE USER SET Approved = 1 WHERE Email = %s;", (entries[index][1])
// Reject
"DELETE FROM USER WHERE Email = %s;", (entries[index][1])

View POI
// Retrive
'select Location_Name from poi'
'select state from citystate'
'select city from citystate'
// Filt
select Location_Name,PCity,PState,Zip_Code,Flag,Date_Flagged from poi
(+ 'where Location_Name=\''+locationNmae+'\' ')
(+ 'pcity=\''+city+'\' ')
(+ 'pstate=\''+state+'\' ')
(+ 'Zip_Code='+zipcode+' ')
(+ 'Date_Flagged between \''+startdate+'\' and \''+enddate+'\' ')


POI detail
// Retrive all datapoint of current poi
"SELECT DType, Data_Value, DateRecorded FROM DATAPOINT WHERE PLocation_Name = %s;", (location)
// Check if this poi has been flagged
"SELECT Flag FROM POI WHERE Location_Name = %s;", (location)
// Apply filter
"SELECT DType, Data_Value, DateRecorded FROM DATAPOINT WHERE (DateRecorded >= %s AND DateRecorded < %s) AND (Data_Value >= %s AND Data_Value < %s) AND DType = %s AND PLocation_Name = %s;", (StartDate, EndDate, StartValue, EndValue, datatype, location)
// Flag this poi
"UPDATE POI SET Flag = 1, Date_Flagged = CURDATE() WHERE Location_Name = %s;", (location)

POI Report
// Retrieve all the requested information of POI Report, which includes POI location name, city, state, mold min, mold avg, mold max, aq min, aq abg, aq max, # of datapoints and flag. However, POI lacking either type of datapoint won't be selected when using the 'type=?' conditions. What's more, since MYSQL dont have a full outer join, the only way to get all the POIs is to union the left and right joined data. Thus:

// sql1 selects all POIs that has mold datapoints

sql1 = "(select t2.PLocation_Name, t3.PCity, t3.PState, t1.mmin, t1.mavg, t1.mmax, t2.aqmin, t2.aqavg, t2.aqmax, Cm + Caq, Flag from ((select PLocation_Name, MIN(Data_Value) as mmin, AVG(Data_Value) as mavg, MAX(Data_Value) as mmax, COUNT(*) as Cm from DATAPOINT as A where Dtype = 'mold' group by PLocation_Name) t1 left join (select PLocation_Name, MIN(Data_Value) as aqmin, AVG(Data_Value) as aqavg, MAX(Data_Value) as aqmax, COUNT(*) as Caq from DATAPOINT as A where Dtype = 'airquality' group by PLocation_Name) t2 on t1.PLocation_Name = t2.PLocation_Name) join (select Location_Name, PCity, PState, Flag from POI) t3 on t2.PLocation_Name = t3.Location_Name)"

// sql2 selects all POIs that has air quality datapoints

sql2 = "(select t2.PLocation_Name, t3.PCity, t3.PState, t1.mmin, t1.mavg, t1.mmax, t2.aqmin, t2.aqavg, t2.aqmax, Cm + Caq, Flag from ((select PLocation_Name, MIN(Data_Value) as mmin, AVG(Data_Value) as mavg, MAX(Data_Value) as mmax, COUNT(*) as Cm from DATAPOINT as A where Dtype = 'mold' group by PLocation_Name) t1 right join (select PLocation_Name, MIN(Data_Value) as aqmin, AVG(Data_Value) as aqavg, MAX(Data_Value) as aqmax, COUNT(*) as Caq from DATAPOINT as A where Dtype = 'airquality' group by PLocation_Name) t2 on t1.PLocation_Name = t2.PLocation_Name) join (select Location_Name, PCity, PState, Flag from POI) t3 on t2.PLocation_Name = t3.Location_Name)"

// sql3 unions sql1 and sql2, which get all the POIs

sql3 = sql1 + ' union ' + sql2

// sql4 fix the count error which adding a none value with an int results in a none
sql4 = 'select PLocation_Name, COUNT(*) from DATAPOINT group by PLocation_Name'
